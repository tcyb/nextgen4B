import gzip
import logging
import sys
import time

import yaml
from Bio import SeqIO

from ..process.filter import get_coords, load_ngs_file

def demux_by_barcode(yfname, ffname, fsuffix='R1'):
    logging.info('Started forward sequence demuxing of '+ffname)
    # Load YAML
    yf = open(yfname)
    expt_yaml = yaml.load(yf)
    yf.close()
    logging.info('Loaded YAML file: '+yfname)
    
    outfiles = {}
    experimentList = expt_yaml['experiments'].keys()
    logging.info('Found experiments: '+', '.join(experimentList))
    
    # Generate forward files
    for expt in experimentList:
        logging.info('Started processing experiment '+expt)
        outfilename = expt+'_'+fsuffix+'.fastq.gz'
        bc = expt_yaml['experiments'][expt]['barcode']
        
        outfiles[expt] = outfilename
        
        fastqf = load_ngs_file(ffname)
        bciterator = (s for s in fastqf if str(s.seq).startswith(bc))
        of = gzip.open(outfilename,'wb')
        SeqIO.write(bciterator, of, "fastq")
        of.close()
        logging.info('Finished writing sequences from experiment '+expt+' to '+outfilename)
    logging.info('Finished forward-strand demuxing of '+ffname)


def demux_PE_by_barcode(yfname, pefname, fsuffix='R1', pesuffix='R2'):
    logging.info('Started paired-end sequence demuxing of '+pefname)
    yf = open(yfname)
    expt_yaml = yaml.load(yf)
    yf.close()
    logging.info('Loaded YAML file: '+yfname)
    
    coordsToExperiment = {}
    experimentList = expt_yaml['experiments'].keys()
    logging.info('Found experiments: '+', '.join(experimentList))
    
    logging.info('Generating forward seq coordinate dictionary')
    # Generate coordinate ID to experiments
    for expt in experimentList:
        outfilename = expt+'_'+fsuffix+'.fastq.gz' # Assumes these things were generated by above code. Should be improved...
        bcf = load_ngs_file(outfilename)
        coords = ((get_coords(s), expt) for s in bcf)
        coordsToExperiment.update(coords)
        logging.info('Processed sequences for experiment '+expt)
    logging.info('Generated forward dictionary, found '+str(len(coordsToExperiment.keys()))+' sequences.')
        
    # Generate paired-end files
    logging.info('Finding experiment for each paired-end sequence.')
    pes = load_ngs_file(pefname)
    pe_files = {expt: gzip.open(expt+'_'+pesuffix+'.fastq.gz', 'wb') for expt in experimentList}
    for seq in pes:
        try:
            seq_expt = coordsToExperiment[get_coords(seq)]
            SeqIO.write(seq, pe_files[seq_expt], 'fastq')
        except: # What exception did this catch? Why does it fail silently?
            pass
    logging.info('Finished experiment-matching for paired-end sequences.')
    logging.info('Finished paired-end strand demuxing for '+pefname)

def demux_dataset(yfname, ffname, pefname):
    # Initialize logging
    timestr = time.strftime("%Y%m%d-%H%M%S")
    logging.basicConfig(filename='bcdemux_'+timestr+'.log',
        level=logging.DEBUG, format='%(asctime)s %(message)s')

    demux_by_barcode(yfname, ffname)
    demux_PE_by_barcode(yfname, pefname)
    
if __name__ == '__main__':
    demux_dataset(sys.argv[1], sys.argv[2], sys.argv[3])
